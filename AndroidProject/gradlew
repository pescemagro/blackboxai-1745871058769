#!/usr/bin/env sh

##############################################################################
##
##  Gradle start up script for UN*X
##
##############################################################################

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

APP_NAME="Gradle"
APP_BASE_NAME=`basename "$0"`

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD="maximum"

warn() {
    echo "$*"
}

die() {
    echo
    echo "$*"
    echo
    exit 1
}

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
case "`uname`" in
    CYGWIN* )
        cygwin=true
        ;;
    MINGW* )
        msys=true
        ;;
    Darwin* )
        darwin=true
        ;;
esac

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=`which java 2> /dev/null`
    if [ -z "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
if [ "$cygwin" = "false" -a "$msys" = "false" ] ; then
    if [ "$MAX_FD" != "maximum" ] ; then
        ulimit -n $MAX_FD > /dev/null 2>&1 || warn "Could not set maximum file descriptor limit: $MAX_FD"
    else
        ulimit -n 65536 > /dev/null 2>&1 || warn "Could not set maximum file descriptor limit: 65536"
    fi
fi

# For Darwin, add options to specify the maximum heap size.
if $darwin; then
    DEFAULT_JVM_OPTS="-Xms256m -Xmx512m"
fi

# Determine the location of the Gradle home directory.
PRG="$0"
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`/"$link"
    fi
done

PRGDIR=`dirname "$PRG"`

# Only set GRADLE_HOME if not already set
if [ -z "$GRADLE_HOME" ]; then
    GRADLE_HOME=`cd "$PRGDIR/.." >/dev/null; pwd`
fi

# Set default JVM options if not set
if [ -z "$JAVA_OPTS" ]; then
    JAVA_OPTS="$DEFAULT_JVM_OPTS"
fi

# Execute Gradle
exec "$JAVACMD" $JAVA_OPTS -classpath "$GRADLE_HOME/lib/gradle-launcher-8.0.jar" org.gradle.launcher.GradleMain "$@"
